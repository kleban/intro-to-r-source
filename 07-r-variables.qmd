---
title: "Оголошення та ініціалізація змінних"
author: "Юрій Клебан"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    highlight-style: github
    code-line-numbers: true
language: _language-ua.yml 
---

## Поняття змінних та оператор присвоєння 

Базовим поняттям практично усіх мов програмування є **змінна**. Змінна дозволяє записати значення або об'єкт та назвати його для подальшого доступу, зміни, видалення по імені.

Наприклад, присвоєння змінній `my_variable` значення `10` записується так: `my_variable <- 5` або `my_variable = 5`.

Операція надання змінній певного значення у програмуванні називається **присвоєнням**.

:::{.callout-important}
Важливо! Зверніть увагу, що присвоєння (`<-`, `=`) та рівність (`==`) це різні поняття. Оператор `==` здіснює перевірку співпадіння значення двох змінних/об'єктів та повертає результат у вигляді логічного значення `TRUE` (якщо значення рівні) або `FALSE` (якщо значення не рівні).
:::

Знак `<-` не є часто використовуваним у різних мовах програмування, зазвичай для присвоєння користуються `=`. Проте в R освновним способом засобом початкової ініціалізації змінних є `<-`.

_Також у програмуванні на R використовуються оператори присвоєння `<<-`, `->`, `->>`. Про них можна прочитати за лыками нижче._

:::{.callout-tip}
 Рекомендую почитати про різницю між операторами присвоєння у R <code>&lt;-</code> та <code>=</code> тут:

 1. [Why do we use arrow as an assignment operator? (Colin FAY)](https://colinfay.me/r-assignment/).
 2. [Difference between assignment operators in R (Ren Kun)](https://renkun.me/2014/01/28/difference-between-assignment-operators-in-r/).
 3. [Assignment Operators](https://stat.ethz.ch/R-manual/R-devel/library/base/html/assignOps.html).
:::

Приклад:

```{r, eval=T}
x <- 45
y <- 10
z <- x + y # z = 45 + 10
z
```

Розберемо приклад, описаний вище:

* У першому рядку оголошується змінна `x` і їй присвоюється значення `45`.
* У другому рядку оголошується змінна `y` і їй присвоюється значення `10`.
* У третьому рядку оголошується змінна `z` і їй присвоюється значення суми `x` + `y`. <br>
<small><i>`#` у R використовується як коментар коду, текст написаний після нього ігнорується.</i></small>
* У четвертому рядку відбувається виведення на консоль змінної `z`.

---

## Правила іменування змінних

Є кілька основних правил іменування змінних у R:
1. Ім'я змінної може складатися з **букв** [a-z, A-z], **цифр** [0-9], **крапки** `.` та нижнього **підкреслювання** `_`.
2. Ім'я змінної повинно починатися з **букви або крапки**. Якщо воно починається з крапки, то наступним символом повинна бути буква.
3. Не можна використовувати зарезервовані ключові слова мови програмування для іменування змінних, наприклад, `TRUE`/`FALSE`.

Ім'я змінної не може містити пробіл (`space`). Якщо є потреба назвати об'єкт кількома словами, то їх зазвичай розділяють підкресленням `_` або крапкою `.`. Наприклад, змінну можна назвати `my_variable_name` або `my.variable.name`. Назва `myVariableName` ([camel case](https://en.wikipedia.org/wiki/Camel_case)) теж буде коректно сприйнята мовою програмування R, проте такий запис тут вживається не часто.

<span class="text-success">Приклад коректного іменування змінних:</span> `total`, `zminna`, `Sum`, `.length_of_something`, `Number123, x_1`.

<span class="text-danger">Приклад неправильного іменування змінних:</span> `tot@l`, `5x_1`, `_variable`, `FALSE`, `.0ne`.
