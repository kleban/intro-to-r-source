---
title: "Корисні математичні функції"
author: "Юрій Клебан"
date: "`r Sys.Date()`"
format:
  html:
    toc: true
    highlight-style: github
    code-line-numbers: true
language: _language-ua.yml 
---


## Заокруглення чисел

У цьому розділі описано роботу функцій: `round()`, `ceiling()`, `floor()`, `trunc()`, `signif()`.

Як ми знаємо з математики, що заокруглення чисел буває "вверх", "вниз" або відносно деякого значення, зазвичай пов'язаного із цифрою `5` (`3.6` заокруглюємо до цілого як `4`, а `3.2` як `3`, ввжаючи `3.5` межею).

<div class="alert alert-danger">
<i class="fas fa-alert fa-2x fa-warning"></i>
Увага! Заокрулення чисел у програмуванні може призводити до помилок у результатах  обчислень. Для задач бізнесу або технічних процесів мінімальні відхилення можуть призводити до викривлених результатів або збоїв у системах.
</div>

<i class="far fa-sticky-note"></i> _**Функція `round()`**_

<div class="alert alert-info"><i class="fas fa-2x fa-alert fa-info-circle"></i> &nbsp; Примітка. Тут і надалі функції будуть позначатися як <code>назва()</code> (назва і "круглі" дужки).</div>

Для заокруглення дійних чисел (з дробовою частиною) за правилом `<0.5 & >=0.5` (не знаю як називається науково) використовується функція `round(x, y)`, де `x` - число, `y` - точність (кількість знаків після коми/крапки). Наприклад:

```{r eval=T}
round(3.557, 2)
round(3.241, 2)
round(-3.557, 2)
round(-3.241, 2)
```

Також можна використати `round(x)` з одним параметром, тоді заокруглення відбудеться до цілої частини, наприклад:

```{r eval=T}
round(124.345)
```

<i class="far fa-sticky-note"></i> _**Функція `floor()`**_

Для заокруглення до найближчого меншого цілого числа слід скористатися функцією `floor()`:

```{r eval=T}
floor(3.557)
floor(3.241)
floor(-3.557)
floor(-3.241)
```

<i class="far fa-sticky-note"></i> _**Функція `ceiling()`**_

Для заокруглення до найближчого більшого цілого числа слід скористатися функцією `ceiling()`:

```{r eval=T}
ceiling(3.557)
ceiling(3.241)
ceiling(-3.557)
ceiling(-3.241)
```

<i class="far fa-sticky-note"></i> _**Функція `trunc()`**_

Функція `trunc()` у R використовується для отримання найбільшого цілого числа, яке більше або рівне `x`. Простими словами це означає, що для чисел менших 0 `(x < 0)` `trunc()` працює як `celing()`, а для чисел більших нуля `x > 0`, як `floor()`:

```{r eval=T}
x <- 5.34
print(paste("trunc:", trunc(x), "celing:", ceiling(x), "floor:", floor(x), sep = " "))
x <- x * -1
print(paste("trunc:", trunc(x), "celing:", ceiling(x), "floor:", floor(x), sep = " "))
```

<i class="far fa-sticky-note"></i> _**Функція `signif()`**_

Інколи виникає потреба заокруглити не десяткову частину числа, а десятки, сотні, тисячі і так далі. Розглядемо варіант, коли у нас є велике число `11 547 741.3` і нам потрібно коротко його записати як `11.5 млн` Для таких задач можна використати функцію `signif(x,y)`, де `x` - число, яке потрібно заокруглити до певного порядку, `y` - порядок заокруглення (рахувати від початку). Наприклад:

```{r eval=T}
big_number <- 11547741.3
rounded_big_number <- signif(big_number,3)
rounded_big_number
rounded_big_number / 1000000
```

### Послідовності чисел (seq, rep) {#chapter242}

<div class="alert alert-danger">
<i class="fa-2x fas fa-alert fa-battery-quarter"></i>
Матеріали розділу у процесі підготовки.
</div>

### Генерація псевдовипадкових чисел {#chapter243}

<div class="alert alert-danger">
<i class="fa-2x fas fa-alert fa-battery-quarter"></i>
Матеріали розділу у процесі підготовки.
</div>

```{r eval=T}
runif(10)
sample(100)
```

### Інші математичні функції та константи R {#chapter244}

Окрім описаного вище набору функцій `R` містить дуже велику кількість реалізованих функцій з різних сфер науки, бізнесу, техніки тощо. Прочитати про них можна з офіційної документації пакетів, у яких вони реалізовані та знайти за допомогою функції `help()` або `?name`. 

Далі розглянемо перелік найпоширеніших функцій, що використовуються для розв'язання навчальних задач під час вивчення основ програмування.

| Функція | Призначення, опис |
|---------|---------|
|*log(x)*|Логарифм числа *x* за основою *e*|
|*log(x,n)*|Логарифм числа *x* за основою *n*|
|*exp(x)*|*e* у степені *x*|
|*sqrt(x)*|Корінь квадратний числа *x*|
|*factorial(x)*|Факторіал числа *x*|
|*abs(x)*|Модуль числа *x*|

Також у `R` доступні ряд тригонометричних функцій, які вивчалися у школі і не тільки, серед них `cos(x)`, `sin(x)`, `tan(x)`, а також `acos(x)`, `asin(x)`, `atan(x)`, `acosh(x)`, `asinh(x)`, `atanh(x)`.

Детальніше про кожну з них можна почитати у документації за допомогою кодманди `help(function)`.



